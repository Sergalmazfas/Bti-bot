#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —á–µ—Ä—Ç–µ–∂–µ–π –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
"""

import requests
import json

def test_drawing_services():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —á–µ—Ä—Ç–µ–∂–µ–π –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π"""
    
    # URL —Å–µ—Ä–≤–∏—Å–∞
    base_url = "https://btibot-637190449180.europe-west1.run.app"
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —á–µ—Ä—Ç–µ–∂–µ–π –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π")
    print("=" * 60)
    
    # –¢–µ—Å—Ç 1: Health check
    print("\n1Ô∏è‚É£ –¢–µ—Å—Ç Health Check:")
    try:
        response = requests.get(f"{base_url}/health", timeout=10)
        print(f"   Status: {response.status_code}")
        print(f"   Response: {response.json()}")
        if response.status_code == 200:
            print("   ‚úÖ Health check passed")
        else:
            print("   ‚ùå Health check failed")
    except Exception as e:
        print(f"   ‚ùå Error: {e}")
    
    # –¢–µ—Å—Ç 2: Status check
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç Status:")
    try:
        response = requests.get(f"{base_url}/status", timeout=10)
        print(f"   Status: {response.status_code}")
        print(f"   Response: {json.dumps(response.json(), indent=2, ensure_ascii=False)}")
        if response.status_code == 200:
            print("   ‚úÖ Status check passed")
        else:
            print("   ‚ùå Status check failed")
    except Exception as e:
        print(f"   ‚ùå Error: {e}")
    
    # –¢–µ—Å—Ç 3: Upload endpoint (–±–µ–∑ —Ñ–∞–π–ª–∞)
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç Upload –±–µ–∑ —Ñ–∞–π–ª–∞:")
    try:
        response = requests.post(f"{base_url}/upload", timeout=10)
        print(f"   Status: {response.status_code}")
        print(f"   Response: {response.json()}")
        if response.status_code == 400:
            print("   ‚úÖ Upload validation working (expected 400)")
        else:
            print("   ‚ö†Ô∏è Unexpected response")
    except Exception as e:
        print(f"   ‚ùå Error: {e}")
    
    # –¢–µ—Å—Ç 4: Upload —Å –Ω–µ–≤–µ—Ä–Ω—ã–º —Ñ–∞–π–ª–æ–º
    print("\n4Ô∏è‚É£ –¢–µ—Å—Ç Upload —Å –Ω–µ–≤–µ—Ä–Ω—ã–º —Ñ–∞–π–ª–æ–º:")
    try:
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å –Ω–µ–≤–µ—Ä–Ω—ã–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º
        with open("test.txt", "w") as f:
            f.write("This is not an IFC file")
        
        with open("test.txt", "rb") as f:
            files = {"file": ("test.txt", f, "text/plain")}
            response = requests.post(f"{base_url}/upload", files=files, timeout=30)
        
        print(f"   Status: {response.status_code}")
        print(f"   Response: {response.json()}")
        
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        import os
        os.remove("test.txt")
        
        if response.status_code == 400:
            print("   ‚úÖ File validation working (expected 400)")
        else:
            print("   ‚ö†Ô∏è Unexpected response")
    except Exception as e:
        print(f"   ‚ùå Error: {e}")
    
    print("\n" + "=" * 60)
    print("üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:")
    print("   ‚Ä¢ BTI —Ä–∞—Å—á–µ—Ç—ã —Å —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ —Ç–∞—Ä–∏—Ñ–∞–º–∏")
    print("   ‚Ä¢ –ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–æ—á–Ω—ã—Ö —Ü–µ–Ω —á–µ—Ä–µ–∑ SERP")
    print("   ‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π")
    print("   ‚Ä¢ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è IFC ‚Üí DWG —á–µ—Ä–µ–∑ Forge")
    print("   ‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ GCS")
    
    print("\nüîß –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —á–µ—Ä—Ç–µ–∂–µ–π:")
    print("   1. –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫–∏ –≤ Telegram –±–æ—Ç–∞")
    print("   2. –°–æ–∑–¥–∞—Ç—å —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –∑–∞–∫–∞–∑–∞ —á–µ—Ä—Ç–µ–∂–µ–π")
    print("   3. –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å Forge –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è DWG")
    print("   4. –î–æ–±–∞–≤–∏—Ç—å —Å–∏—Å—Ç–µ–º—É –∑–∞–∫–∞–∑–æ–≤ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")

if __name__ == "__main__":
    test_drawing_services()
