#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ 3D ‚Üí 2D –±–µ–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
"""

import os
import subprocess
import json

def test_service_availability():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–∞"""
    
    print("üß™ –¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞")
    print("=" * 40)
    
    base_url = "https://btibot-637190449180.europe-west1.run.app"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º health endpoint
    print("\n1Ô∏è‚É£ Health Check:")
    try:
        result = subprocess.run(['curl', '-s', f'{base_url}/health'], 
                              capture_output=True, text=True, timeout=10)
        if result.returncode == 0:
            print("   ‚úÖ –°–µ—Ä–≤–∏—Å –¥–æ—Å—Ç—É–ø–µ–Ω")
            print(f"   üìä –û—Ç–≤–µ—Ç: {result.stdout}")
        else:
            print("   ‚ùå –°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            return False
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º status endpoint
    print("\n2Ô∏è‚É£ Status Check:")
    try:
        result = subprocess.run(['curl', '-s', f'{base_url}/status'], 
                              capture_output=True, text=True, timeout=10)
        if result.returncode == 0:
            print("   ‚úÖ –°—Ç–∞—Ç—É—Å –ø–æ–ª—É—á–µ–Ω")
            print(f"   üìä –û—Ç–≤–µ—Ç: {result.stdout}")
        else:
            print("   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    return True

def test_file_upload():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–∞"""
    
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞:")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
    test_file = "test_model.ifc"
    if not os.path.exists(test_file):
        print(f"   ‚ùå –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª {test_file} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    print(f"   üìÅ –§–∞–π–ª –Ω–∞–π–¥–µ–Ω: {test_file}")
    print(f"   üìè –†–∞–∑–º–µ—Ä: {os.path.getsize(test_file)} –±–∞–π—Ç")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É —á–µ—Ä–µ–∑ curl
    base_url = "https://btibot-637190449180.europe-west1.run.app"
    
    print("   üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª...")
    try:
        cmd = ['curl', '-s', '-X', 'POST', 
               '-F', f'file=@{test_file}',
               f'{base_url}/upload']
        
        result = subprocess.run(cmd, capture_output=True, text=True, timeout=300)
        
        print(f"   üìä –°—Ç–∞—Ç—É—Å: {result.returncode}")
        print(f"   üì§ –û—Ç–≤–µ—Ç: {result.stdout}")
        
        if result.returncode == 0:
            try:
                response_data = json.loads(result.stdout)
                if response_data.get('success'):
                    print("   ‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω!")
                    print(f"   üìÅ GCS URL: {response_data.get('gcs_url', 'N/A')}")
                    return True
                else:
                    print(f"   ‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {response_data.get('message', 'Unknown')}")
                    return False
            except:
                print("   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –æ—Ç–≤–µ—Ç")
                return False
        else:
            print("   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏")
            print(f"   üìä –î–µ—Ç–∞–ª–∏: {result.stderr}")
            return False
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def show_test_instructions():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é"""
    
    print("\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é:")
    print("=" * 50)
    
    print("\nüéØ –¶–µ–ª—å —Ç–µ—Å—Ç–∞:")
    print("   ‚Ä¢ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é IFC –º–æ–¥–µ–ª—å")
    print("   ‚Ä¢ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —á–µ—Ä–µ–∑ Forge API –≤ DWG/PDF")
    print("   ‚Ä¢ –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ GCS")
    print("   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ 2D —á–µ—Ä—Ç–µ–∂–∞")
    
    print("\nüìÅ –¢–µ—Å—Ç–æ–≤–∞—è –º–æ–¥–µ–ª—å:")
    print("   ‚Ä¢ –§–∞–π–ª: test_model.ifc")
    print("   ‚Ä¢ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: –∫–≤–∞—Ä—Ç–∏—Ä–∞ 50 –º¬≤, 2 –∫–æ–º–Ω–∞—Ç—ã, 1 —Å–∞–Ω—É–∑–µ–ª")
    print("   ‚Ä¢ –≠–ª–µ–º–µ–Ω—Ç—ã: —Å—Ç–µ–Ω—ã, –æ–∫–Ω–∞, –¥–≤–µ—Ä–∏")
    print("   ‚Ä¢ –†–∞–∑–º–µ—Ä: 4.5 KB")
    
    print("\nüîÑ –ü—Ä–æ—Ü–µ—Å—Å –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏:")
    print("   1. –ó–∞–≥—Ä—É–∑–∫–∞ IFC —Ñ–∞–π–ª–∞ –Ω–∞ Cloud Run")
    print("   2. –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–∞–π–ª–∞ (.ifc, <100MB)")
    print("   3. –ó–∞–≥—Ä—É–∑–∫–∞ –≤ Forge OSS bucket")
    print("   4. –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è IFC ‚Üí DWG —á–µ—Ä–µ–∑ Model Derivative API")
    print("   5. –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏–∑ Forge")
    print("   6. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ GCS: gs://btibot-processed/processed/<–¥–∞—Ç–∞>/")
    print("   7. –í–æ–∑–≤—Ä–∞—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
    
    print("\n‚úÖ –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:")
    print("   ‚Ä¢ DWG/PDF —Ñ–∞–π–ª —Å 2D —á–µ—Ä—Ç–µ–∂–æ–º")
    print("   ‚Ä¢ –ü–ª–∞–Ω –∫–≤–∞—Ä—Ç–∏—Ä—ã —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏")
    print("   ‚Ä¢ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–µ–Ω, –æ–∫–æ–Ω, –¥–≤–µ—Ä–µ–π")
    print("   ‚Ä¢ –ê–Ω–Ω–æ—Ç–∞—Ü–∏–∏ –∏ —Ä–∞–∑–º–µ—Ä—ã")
    
    print("\nüîß –î–ª—è —Ä—É—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("   curl -X POST -F 'file=@test_model.ifc' \\")
    print("        https://btibot-637190449180.europe-west1.run.app/upload")
    
    print("\nüì± –ß–µ—Ä–µ–∑ Telegram –±–æ—Ç–∞:")
    print("   1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–∞–¥–∞—Å—Ç—Ä–æ–≤—ã–π –Ω–æ–º–µ—Ä")
    print("   2. –î–æ–∂–¥–∏—Ç–µ—Å—å —Ä–∞—Å—á–µ—Ç–∞ –ë–¢–ò")
    print("   3. –ù–∞–∂–º–∏—Ç–µ 'üîÑ –¢–µ—Å—Ç 3D‚Üí2D –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏'")
    print("   4. –û—Ç–ø—Ä–∞–≤—å—Ç–µ IFC —Ñ–∞–π–ª –±–æ—Ç—É")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    print("üöÄ –¢–µ—Å—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ 3D ‚Üí 2D")
    print("=" * 50)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    show_test_instructions()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–∞
    if not test_service_availability():
        print("\n‚ùå –°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, —Ç–µ—Å—Ç –ø—Ä–µ—Ä–≤–∞–Ω")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–∞
    success = test_file_upload()
    
    print("\n" + "=" * 50)
    if success:
        print("üéâ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù –£–°–ü–ï–®–ù–û!")
        print("‚úÖ IFC —Ñ–∞–π–ª –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –≤ DWG/PDF")
        print("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ GCS")
        print("‚úÖ –°—Å—ã–ª–∫–∞ –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—É—á–µ–Ω–∞")
    else:
        print("‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù!")
        print("‚ùå –û—à–∏–±–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏")
    
    print("\nüìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ—Å—Ç–µ:")
    print(f"   üåê –°–µ—Ä–≤–∏—Å: https://btibot-637190449180.europe-west1.run.app")
    print(f"   üìÅ –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª: test_model.ifc")
    print(f"   üéØ –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: DWG/PDF —á–µ—Ä—Ç–µ–∂")

if __name__ == "__main__":
    main()
